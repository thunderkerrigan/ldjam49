[gd_scene load_steps=5 format=2]

[ext_resource path="res://Assets/Images/ErlenMeyer.png" type="Texture" id=1]
[ext_resource path="res://Assets/Images/erlenmeyer_fill.png" type="Texture" id=2]

[sub_resource type="Shader" id=3]
code = "// HSV to RBG from https://www.rapidtables.com/convert/color/hsv-to-rgb.html
// Rotation matrix from https://en.wikipedia.org/wiki/Rotation_matrix

shader_type canvas_item;

const float PI = 3.1415926535;

uniform float strength: hint_range(0., 1.) = 0.5;
uniform float speed: hint_range(0., 10.) = 0.5;
uniform float angle: hint_range(0., 360.) = 0.;

void fragment() {
	float hue = UV.x * cos(radians(angle)) - UV.y * sin(radians(angle));
	hue = fract(hue + fract(TIME  * speed));
	float x = 1. - abs(mod(hue / (1./ 6.), 2.) - 1.);
	vec3 rainbow;
	if(hue < 1./6.){
		rainbow = vec3(1., x, 0.);
	} else if (hue < 1./3.) {
		rainbow = vec3(x, 1., 0);
	} else if (hue < 0.5) {
		rainbow = vec3(0, 1., x);
	} else if (hue < 2./3.) {
		rainbow = vec3(0., x, 1.);
	} else if (hue < 5./6.) {
		rainbow = vec3(x, 0., 1.);
	} else {
		rainbow = vec3(1., 0., x);
	}
	vec4 color = texture(TEXTURE, UV);
	COLOR = mix(color, vec4(rainbow, color.a), strength);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 3 )
shader_param/strength = 0.5
shader_param/speed = 0.5
shader_param/angle = 0.0

[node name="ErlenMeyer" type="Node2D"]

[node name="Control" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
rect_scale = Vector2( 0.8, 0.8 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ErlenmeyerProgress" type="TextureProgress" parent="Control"]
material = SubResource( 2 )
margin_right = 528.56
margin_bottom = 926.0
step = 5.0
texture_over = ExtResource( 1 )
texture_progress = ExtResource( 2 )
fill_mode = 3
stretch_margin_left = 2
stretch_margin_right = 20
stretch_margin_bottom = 20
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ErlenMeyer" type="Sprite" parent="Control"]
texture = ExtResource( 1 )
centered = false
